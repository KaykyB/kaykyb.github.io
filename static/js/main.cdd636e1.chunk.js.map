{"version":3,"sources":["assets/kb.svg","assets/telurNewLight/telurNew.png","assets/sceneOne/code.png","assets/sceneTwo/blue-circle-bottom.png","assets/sceneTwo/blue-circle-top.png","assets/sceneTwo/yellow-triangle-filled.png","assets/sceneTwo/yellow-triangle.png","assets/sceneThree/face.png","assets/sceneThree/bubbles.png","assets/sceneThree/binary.png","components/Navbar/NavbarLogo/NavbarLogo.tsx","components/Navbar/NavbarLink/NavbarLink.tsx","components/Navbar/Navbar.tsx","components/Scene/SceneImage/SceneImage.tsx","components/PrimaryButton/PrimaryButton.tsx","components/Scene/SceneContent/SceneContent.tsx","components/Scene/HomeScene.tsx","views/Home/Home.tsx","views/Portfolio/Portfolio.tsx","views/Contact/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/sceneThree/bhaskara.png"],"names":["module","exports","__webpack_require__","p","NavbarLogo","react_default","a","createElement","className","style","height","this","props","size","width","src","kb","alt","Component","NavbarLink","useAnchor","react_router_dom","to","link","activeClassName","activeStyle","fill","activeFillColor","getItem","href","Fragment","icon","strokeWidth","hideLabel","label","Navbar","dvcType","deviceType","Navbar_NavbarLogo_NavbarLogo","Navbar_NavbarLink_NavbarLink","Icon","SceneImage","backgroundImage","img","animationDelay","animationDelayMs","animationDuration","animationDurationMs","PrimaryButton","backgroundColor","background","foregroundColor","Object","objectSpread","color","SceneContent","textColor","text","split","map","v","i","key","components_PrimaryButton_PrimaryButton","buttonText","buttonBackgroundColor","buttonForegroundColor","Icons","HomeScene","col","firstGradientStop","lastGradientStop","scenes","k","Scene_SceneImage_SceneImage","Scene_SceneContent_SceneContent","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rootDiv","handleRootWheel","bind","assertThisInitialized","_this2","onWheel","ref","div","components_Scene_HomeScene","code","bcb","yt","bct","ytf","newLight","bhaskara","bubbles","face","binary","ev","scrollBy","left","deltaY","behavior","preventDefault","Portfolio","Contact","dist","App","getApp","adendos","navbarOnSide","components_Navbar_Navbar","react_router","path","exact","render","views_Home_Home","views_Portfolio_Portfolio","Contact_Contact_Contact","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdd636e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kb.9550ccc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/telurNew.5964aa35.png\";","module.exports = __webpack_public_path__ + \"static/media/code.15be9b5e.png\";","module.exports = __webpack_public_path__ + \"static/media/blue-circle-bottom.15545c90.png\";","module.exports = __webpack_public_path__ + \"static/media/blue-circle-top.72090e0d.png\";","module.exports = __webpack_public_path__ + \"static/media/yellow-triangle-filled.4d053aa6.png\";","module.exports = __webpack_public_path__ + \"static/media/yellow-triangle.44a9f48d.png\";","module.exports = __webpack_public_path__ + \"static/media/face.7ed9f164.png\";","module.exports = __webpack_public_path__ + \"static/media/bubbles.c9285e5f.png\";","module.exports = __webpack_public_path__ + \"static/media/binary.f27bc414.png\";","import React, { Component } from \"react\";\nimport \"./NavbarLogo.css\";\nimport kb from \"../../../assets/kb.svg\";\nimport { number } from \"prop-types\";\n\ninterface NavbarLogoProps {\n  size: number;\n}\n\nclass NavbarLogo extends Component<NavbarLogoProps> {\n  render() {\n    return (\n      <div className=\"NavbarLogo\" style={{ height: this.props.size + \"px\", width: this.props.size + \"px\" }}>\n        <img src={kb} className=\"NavbarLogo-logo\" alt=\"Logo KB\" />\n      </div>\n    );\n  }\n}\n\nexport default NavbarLogo;\n","import React, { Component } from \"react\";\nimport \"./NavbarLink.css\";\nimport * as Icon from \"react-feather\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface NavbarLinkProps {\n  size: number;\n  icon: React.ComponentType<Icon.Props>;\n  label: string;\n  hideLabel?: boolean;\n  link: string;\n  useAnchor?: boolean;\n  activeFillColor?: string;\n}\n\nclass NavbarLink extends Component<NavbarLinkProps> {\n  render() {\n    return (\n      <div className=\"NavbarLink\" style={{ height: this.props.size + \"px\", width: this.props.size + \"px\" }}>\n        {!this.props.useAnchor && (\n          <NavLink\n            to={this.props.link}\n            activeClassName=\"active\"\n            activeStyle={{ fill: this.props.activeFillColor || \"blue\" }}\n          >\n            {this.getItem()}\n          </NavLink>\n        )}\n        {this.props.useAnchor && <a href={this.props.link}>{this.getItem()}</a>}\n      </div>\n    );\n  }\n\n  getItem() {\n    return (\n      <>\n        <div className=\"NavbarLink-iconContainer\">\n          <this.props.icon size={(this.props.size / 64) * 24} strokeWidth={1} />\n        </div>\n        {!this.props.hideLabel && <div className=\"NavbarLink-label\">{this.props.label}</div>}\n      </>\n    );\n  }\n}\n\nexport default NavbarLink;\n","import React, { Component } from \"react\";\nimport \"./Navbar.css\";\nimport NavbarLogo from \"./NavbarLogo/NavbarLogo\";\nimport NavbarLink from \"./NavbarLink/NavbarLink\";\nimport * as Icon from \"react-feather\";\nimport { Link } from \"react-router-dom\";\n\ninterface NavbarProps {\n  deviceType: \"landscape-desktop\" | \"landscape-mobile\" | \"portrait-desktop\" | \"portrait-mobile\";\n}\n\nclass Navbar extends Component<NavbarProps> {\n  render() {\n    const dvcType = this.props.deviceType;\n\n    const size = dvcType === \"landscape-desktop\" ? 128 : 64;\n    const hideLabel = dvcType === \"landscape-desktop\" ? false : true;\n    const hamburger = dvcType === \"landscape-desktop\" ? false : true;\n\n    return (\n      <div className={\"Navbar \" + dvcType}>\n        <Link to=\"/\">\n          <NavbarLogo size={size} />\n        </Link>\n        <div className={\"Navbar-linksContainer \" + dvcType}>\n          <NavbarLink\n            icon={Icon.BookOpen}\n            size={size}\n            label=\"portfolio\"\n            hideLabel={hideLabel}\n            activeFillColor=\"#5809ff\"\n            link=\"https://www.freelancer.com/u/kaykyb\"\n            useAnchor\n          />\n\n          <NavbarLink\n            icon={Icon.Smile}\n            size={size}\n            label=\"contact\"\n            hideLabel={hideLabel}\n            link=\"/contact\"\n            activeFillColor=\"#90A4AE\"\n          />\n        </div>\n\n        <NavbarLink\n          icon={Icon.GitHub}\n          size={size}\n          label=\"github\"\n          hideLabel={hideLabel}\n          link=\"https://github.com/kaykyb\"\n          activeFillColor=\"#ff0047\"\n          useAnchor\n        />\n\n        {/* {hamburger && (\n          <NavbarLink icon={Icon.Menu} size={size} label=\"menu\" hideLabel={hideLabel} link=\"/menu\" />\n        )}\n        {!hamburger && (\n          <NavbarLink\n            icon={Icon.GitHub}\n            size={size}\n            label=\"github\"\n            hideLabel={hideLabel}\n            link=\"https://github.com/kaykyb\"\n            useAnchor\n          />\n        )} */}\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./SceneImage.css\";\n\ninterface SceneImageProps {\n  img: string;\n  animationDelayMs: number;\n  animationDurationMs: number;\n}\n\nclass SceneImage extends Component<SceneImageProps> {\n  render() {\n    return (\n      <div\n        className=\"SceneImage\"\n        style={{\n          backgroundImage: \"url(\" + this.props.img + \")\",\n          animationDelay: this.props.animationDelayMs + \"ms\",\n          animationDuration: this.props.animationDurationMs + \"ms\"\n        }}\n      />\n    );\n  }\n}\n\nexport default SceneImage;\n","import React, { Component } from \"react\";\nimport * as Icons from \"react-feather\";\n\nimport \"./PrimaryButton.css\";\n\ninterface PrimaryButtonProps {\n  label: string;\n  icon?: React.ComponentType<Icons.Props>;\n  backgroundColor?: string;\n  foregroundColor?: string;\n}\n\nclass PrimaryButton extends Component<PrimaryButtonProps> {\n  render() {\n    let style = {};\n\n    if (this.props.backgroundColor) {\n      style = { background: this.props.backgroundColor };\n    }\n\n    if (this.props.foregroundColor) {\n      style = { ...style, color: this.props.foregroundColor };\n    }\n\n    return (\n      <button className=\"PrimaryButton\" style={style}>\n        {this.props.label}\n        {this.props.icon && (\n          <div className=\"PrimaryButton-icon\">\n            <this.props.icon strokeWidth={1} />\n          </div>\n        )}\n      </button>\n    );\n  }\n}\n\nexport default PrimaryButton;\n","import React, { Component, ReactNode } from \"react\";\nimport \"./SceneContent.css\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport PrimaryButton from \"../../PrimaryButton/PrimaryButton\";\nimport * as Icons from \"react-feather\";\n\ninterface SceneContentProps {\n  text: string;\n  textColor?: string;\n  buttonText: string;\n  buttonBackgroundColor?: string;\n  buttonForegroundColor?: string;\n  link: string;\n  useAnchor?: boolean;\n}\n\nclass SceneContent extends Component<SceneContentProps> {\n  render() {\n    let style = {};\n\n    if (this.props.textColor) {\n      style = { color: this.props.textColor };\n    }\n\n    return (\n      <div className=\"SceneContent\">\n        <h2 style={style}>\n          {this.props.text.split(\"\\n\").map((v, i) => (\n            <span key={i}>{v}</span>\n          ))}\n        </h2>\n\n        {!this.props.useAnchor && (\n          <Link to={this.props.link}>\n            <PrimaryButton\n              label={this.props.buttonText}\n              backgroundColor={this.props.buttonBackgroundColor}\n              foregroundColor={this.props.buttonForegroundColor}\n              icon={Icons.ArrowRight}\n            />\n          </Link>\n        )}\n\n        {this.props.useAnchor && (\n          <a href={this.props.link}>\n            <PrimaryButton\n              label={this.props.buttonText}\n              backgroundColor={this.props.buttonBackgroundColor}\n              foregroundColor={this.props.buttonForegroundColor}\n              icon={Icons.ArrowRight}\n            />\n          </a>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SceneContent;\n","import React, { Component } from \"react\";\nimport \"./HomeScene.css\";\nimport SceneImage from \"./SceneImage/SceneImage\";\n\nimport SceneContent from \"./SceneContent/SceneContent\";\n\ninterface SceneDetails {\n  img: string;\n  animationDelay: number;\n  animationDuration: number;\n}\n\ninterface HomeSceneProps {\n  text: string;\n  textColor?: string;\n  buttonText: string;\n  buttonBackgroundColor?: string;\n  buttonForegroundColor?: string;\n  scenes: SceneDetails[];\n  firstGradientStop: string;\n  lastGradientStop: string;\n  deviceType: \"landscape-desktop\" | \"landscape-mobile\" | \"portrait-desktop\" | \"portrait-mobile\";\n  link: string;\n  useAnchor?: boolean;\n}\n\nclass HomeScene extends Component<HomeSceneProps> {\n  render() {\n    const col = this.props.deviceType === \"landscape-desktop\" || this.props.deviceType == \"landscape-mobile\";\n    return (\n      <div\n        className={\"HomeScene \" + (col ? \"col\" : \"row\")}\n        style={{\n          backgroundImage:\n            \"linear-gradient(45deg, \" + this.props.firstGradientStop + \", \" + this.props.lastGradientStop\n        }}\n      >\n        {this.props.scenes.map((v, k) => (\n          <SceneImage\n            img={v.img}\n            animationDelayMs={v.animationDelay}\n            animationDurationMs={v.animationDuration}\n            key={k}\n          />\n        ))}\n\n        <SceneContent\n          link={this.props.link}\n          text={this.props.text}\n          textColor={this.props.textColor}\n          buttonText={this.props.buttonText}\n          buttonBackgroundColor={this.props.buttonBackgroundColor}\n          buttonForegroundColor={this.props.buttonForegroundColor}\n          useAnchor={this.props.useAnchor}\n        />\n      </div>\n    );\n  }\n}\n\nexport default HomeScene;\n","import React, { Component } from \"react\";\nimport HomeScene from \"../../components/Scene/HomeScene\";\nimport \"./Home.css\";\n\n// newLight\nimport newLight from \"../../assets/telurNewLight/telurNew.png\";\n\n// scene 1\nimport code from \"../../assets/sceneOne/code.png\";\n\n// scene 2\nimport bcb from \"../../assets/sceneTwo/blue-circle-bottom.png\";\nimport bct from \"../../assets/sceneTwo/blue-circle-top.png\";\nimport ytf from \"../../assets/sceneTwo/yellow-triangle-filled.png\";\nimport yt from \"../../assets/sceneTwo/yellow-triangle.png\";\n\n// scene 3\nimport face from \"../../assets/sceneThree/face.png\";\nimport bubbles from \"../../assets/sceneThree/bubbles.png\";\nimport binary from \"../../assets/sceneThree/binary.png\";\nimport bhaskara from \"../../assets/sceneThree/bhaskara.png\";\n\ninterface HomeProps {\n  deviceType: \"landscape-desktop\" | \"landscape-mobile\" | \"portrait-desktop\" | \"portrait-mobile\";\n}\n\nclass Home extends Component<HomeProps> {\n  private rootDiv?: HTMLDivElement | null;\n\n  constructor(props: HomeProps) {\n    super(props);\n\n    this.handleRootWheel = this.handleRootWheel.bind(this);\n  }\n\n  render() {\n    return (\n      <div\n        className={\"Home \" + this.props.deviceType}\n        onWheel={this.handleRootWheel}\n        ref={div => (this.rootDiv = div)}\n      >\n        <HomeScene\n          deviceType={this.props.deviceType}\n          text={`Creating\\nwith code.`}\n          buttonText=\"Projects\"\n          scenes={[\n            {\n              img: code,\n              animationDelay: 0,\n              animationDuration: 0\n            }\n          ]}\n          firstGradientStop=\"#000000\"\n          lastGradientStop=\"#010d34\"\n          link=\"https://github.com/kaykyb\"\n          useAnchor\n        />\n        <HomeScene\n          deviceType={this.props.deviceType}\n          text={`Designing\\nwith love.`}\n          buttonText=\"Portfolio\"\n          scenes={[\n            {\n              img: bcb,\n              animationDelay: 0,\n              animationDuration: 0\n            },\n            {\n              img: yt,\n              animationDelay: 0,\n              animationDuration: 7000\n            },\n            {\n              img: bct,\n              animationDelay: 0,\n              animationDuration: 5000\n            },\n            {\n              img: ytf,\n              animationDelay: 0,\n              animationDuration: 6000\n            }\n          ]}\n          firstGradientStop=\"#3C0070\"\n          lastGradientStop=\"#0800FF\"\n          buttonBackgroundColor=\"#FFF700\"\n          buttonForegroundColor=\"#000000\"\n          link=\"https://www.freelancer.com/u/kaykyb\"\n          useAnchor\n        />\n        {/* TELURIO MARKETING */}\n        <HomeScene\n          deviceType={this.props.deviceType}\n          text={`Telurio.\\nThe open editor.`}\n          buttonText=\"Contribute\"\n          scenes={[\n            {\n              img: newLight,\n              animationDelay: 0,\n              animationDuration: 0\n            }\n          ]}\n          firstGradientStop=\"#000000\"\n          lastGradientStop=\"#000000\"\n          buttonBackgroundColor=\"#ff0000\"\n          link=\"https://github.com/kaykyb/telurio-bootstrap\"\n          useAnchor\n        />\n\n        <HomeScene\n          deviceType={this.props.deviceType}\n          text={`About math,\\ntech and passion.`}\n          buttonText=\"Hire Me\"\n          scenes={[\n            {\n              img: bhaskara,\n              animationDelay: 0,\n              animationDuration: 8000\n            },\n            {\n              img: bubbles,\n              animationDelay: 0,\n              animationDuration: 7000\n            },\n            {\n              img: face,\n              animationDelay: 0,\n              animationDuration: 0\n            },\n            {\n              img: binary,\n              animationDelay: 0,\n              animationDuration: 6000\n            }\n          ]}\n          firstGradientStop=\"#FFFFFF\"\n          lastGradientStop=\"#FFFFFF\"\n          buttonBackgroundColor=\"#000000\"\n          buttonForegroundColor=\"#00BEF9\"\n          textColor=\"#00BEF9\"\n          link=\"https://www.freelancer.com/u/kaykyb\"\n          useAnchor\n        />\n      </div>\n    );\n  }\n\n  handleRootWheel(ev: React.WheelEvent<HTMLDivElement>) {\n    if (this.props.deviceType === \"landscape-desktop\" && this.rootDiv) {\n      this.rootDiv.scrollBy({ left: ev.deltaY / 2, behavior: \"auto\" });\n      ev.preventDefault();\n    }\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nimport \"./Portfolio.css\";\n\ninterface PortfolioProps {\n  deviceType: \"landscape-desktop\" | \"landscape-mobile\" | \"portrait-desktop\" | \"portrait-mobile\";\n}\n\nclass Portfolio extends Component<PortfolioProps> {\n  render() {\n    return <div className=\"Portfolio\">Portfolio</div>;\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from \"react\";\n\nimport \"./Contact.css\";\n\nimport * as Icons from \"react-feather\";\n\nexport default class Contact extends Component {\n  render() {\n    return (\n      <div className=\"Contact\">\n        <div className=\"contact-info\">\n          <h3>Contact</h3>\n          <div className=\"contact-item\">\n            <Icons.Mail strokeWidth=\"1\" />\n            &nbsp;&nbsp;hello@kaykyb.com\n          </div>\n          <div className=\"contact-item\">\n            <Icons.GitHub strokeWidth=\"1\" />\n            &nbsp;&nbsp;kaykyb\n          </div>\n          <div className=\"contact-item\">\n            <Icons.Twitter strokeWidth=\"1\" />\n            &nbsp;&nbsp;okaykyb\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// views\nimport Home from \"./views/Home/Home\";\nimport Portfolio from \"./views/Portfolio/Portfolio\";\nimport Contact from \"./views/Contact/Contact\";\n// import LanguageSelection from \"./views/LanguageSelection/LanguageSelection\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App-container only-landscape only-desktop\">\n          {this.getApp(\"landscape-desktop\", \"only-landscape only-desktop\")}\n        </div>\n        <div className=\"App-container only-landscape only-mobile\">\n          {this.getApp(\"landscape-mobile\", \"only-landscape only-mobile\")}\n        </div>\n        <div className=\"App-container only-portrait only-desktop\">\n          {this.getApp(\"portrait-desktop\", \"only-portrait only-desktop\")}\n        </div>\n        <div className=\"App-container only-portrait only-mobile\">\n          {this.getApp(\"portrait-mobile\", \"only-portrait only-mobile\")}\n        </div>\n      </Router>\n    );\n  }\n\n  getApp(\n    deviceType: \"landscape-desktop\" | \"landscape-mobile\" | \"portrait-desktop\" | \"portrait-mobile\",\n    adendos: string\n  ) {\n    const navbarOnSide = deviceType === \"landscape-desktop\" || deviceType === \"landscape-mobile\";\n\n    return (\n      <>\n        {/* <LanguageSelection deviceType={deviceType} /> */}\n        {!navbarOnSide && <Navbar deviceType={deviceType} />}\n        <div className={\"App \" + adendos}>\n          {navbarOnSide && <Navbar deviceType={deviceType} />}\n          <Route path=\"/\" exact render={() => <Home deviceType={deviceType} />} />\n          <Route path=\"/portfolio\" exact render={() => <Portfolio deviceType={deviceType} />} />\n          <Route path=\"/contact\" exact render={() => <Contact />} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bhaskara.9981fc04.png\";"],"sourceRoot":""}